
<style type='text/css'>
        div#instructions {
                max-width: 960px;
                font-size: 2em;
                color: #aaa;
                text-align: center;
                padding-top: 10%;
                margin: 0 auto;
        }
        div#instructions small {
                font-size: .7em;
        }
        div#dropzone {
                position: fixed;
                top: 0; left: 0;
                width: 100%; height: 100%;
                z-index: 1000;
                background-color: #7d7;
                opacity: 0;
                transition: visibility 500ms, opacity 500ms;
        }
        select#file-selector {
                display: none;
                /*display: block;*/
                font-size: 2em;
                margin: 0 auto;
        }
</style>



<div id="doc">
        <select id="file-selector"></select>
        <div id="instructions">Drag and drop Jupyter notebooks anywhere here</div>
</div>


<script type='text/javascript'>
    var d = document
    var doc = d.getElementById('doc')
    var fs = d.getElementById('file-selector')
    fs.addEventListener('change', function() {
        var nbs = doc.childNodes
        for (var j=0; j<nbs.length; j++) {
            if (nbs[j].nodeName != 'DIV') continue
            if (nbs[j].getAttribute('rel') == fs.value) {
                nbs[j].style.display = 'block'
                continue
            }
            nbs[j].style.display = 'none'
        }
    })
    var dz = d.createElement('div')
    dz.style.visibility = 'hidden'
    dz.setAttribute('id', 'dropzone')
    d.getElementsByTagName('body')[0].appendChild(dz)


    window.addEventListener('dragenter', function(e) {
        dz.style.opacity = .3;
        dz.style.visibility = ''
    })
    dz.addEventListener('dragenter', dzenter, false);
    dz.addEventListener('dragover', dzover, false);
    dz.addEventListener('drop', dzdrop, false);
    function dzenter(e) {
        e.stopPropagation()
        e.preventDefault()
    }
    function dzover(e) {
        e.stopPropagation()
        e.preventDefault()
    }
    function dzdrop(e) {
        dz.style.opacity = 0
        dz.style.visibility = 'hidden'
        e.stopPropagation()
        e.preventDefault()
        var fns = e.dataTransfer.files
        renderFiles(fns)
    }
    function renderFiles(fns) {
        d.getElementById('instructions').style.display = 'none'
        fs.style.display = 'block'
        for (var j=0; j<fns.length; j++) {
            var fn = fns[j]
            if (!fn.name.endsWith('.ipynb')) {
                console.log('File ' + fn.name + ' not a Jupyter notebook, skipping')
                continue
            }
            var rd = new FileReader()
            rd.addEventListener('load', (function (j, rd, fn) {
                return function() {
                    var dt = JSON.parse(rd.result)
                    // Does a container for this file exist already?
                    // If not, create it
                    var tg = doc.querySelector('div[rel="' + fn.name + '"]')
                    if (tg === null) {
                        tg = d.createElement('div')
                        tg.setAttribute('rel', fn.name)
                        doc.appendChild(tg)
                    }

                    // hide rendered notebook iff
                    //  1) it's the first one loaded, or
                    //  2) it's the same one as already showed (refresh)
                    if (!(fs.getElementsByTagName('option').length == 0 ||
                        fs.value == fn.name))
                        tg.style.display = 'none'
                    // populate the <select>
                    if (fs.querySelector('option[value="' + fn.name + '"]') === null) {
                        var op = d.createElement('option')
                        op.textContent = fn.name
                        fs.appendChild(op)
                    }
                    nbv.render(dt, tg)
                }
            })(j, rd, fn))
            rd.readAsText(fn)
        }
    }
</script>